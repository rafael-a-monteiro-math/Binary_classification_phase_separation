[
["index.html", "Binary classification as a phase separation process - a short tutorial 1 Introduction", " Binary classification as a phase separation process - a short tutorial Rafael Monteiro Mathematics for Advanced Materials - Open Innovation Laboratory/Tohoku University (AIST), Sendai, Japanmonteirodasilva-rafael@aist.jp, rafael.a.monteiro.math@gmail.com 2021-09-27 1 Introduction This is a short companion tutorial to the github (Monteiro 2020b). We give here a glimpse of the Phase Separation Binary Classifier (in short, PSBC), proposed in the article Binary Classification as a Phase Separation Process, by Rafael Monteiro; a preprint is available on arXiv. This is a new type of Recurrent Neural Network whose architecture is inspired on how (binary) fluids phase separate. An implementation of the model can be found in the module binary_phase_separation.py. Part of this tutorial can also be found in README_v2.pdf. …but, before we start… This project can be downloaded in tarballs. The first 3 of them are thos enecessary to replicate the numerical tests we did: PSBC_dataset.tar.gz; PSBC_libs_grids_statistics.tar.gz; PSBC_notebooks.tar.gz, while the last 2 can be used to reproduce the figures shown in the paper: PSBC_BCs.tar.gz; PSBC_classifier_PCA.tar.gz; All these files are available at (Monteiro 2020a). All of them but PSBC_dataset.tar.gz can also be downloaded from Github “(Monteiro 2020b)”. * The main module for this project are in the folder MOTHER_PSBC. The main module, tfversion_binary_phase_separation.py does not depend on the folder-tree structure described in the README_v2 file on “(Monteiro 2020b)”. * If you want to reproduce this notebook you should download the file - PSBC_notebooks.tar.gz. * It is always recommended to download big using wget), but you can use your browser. To decompress the tarballs, look online (like here) or check the README_v2.pdf guide. This website is partially based on this jupyter-notebook. For simplicity, I shall refrain from posting the whole oputput of some cases, marking then with a symbol \\(&gt;&gt;&gt;\\). We will summarize some of the outputs, adding a “…” to them. If you would like to see the whole output, please see PSBC_Examples.ipynb. As we said, this discussion is short but we want to offer a bit more than just a manual, so we will point out references along the way. References "]
]
